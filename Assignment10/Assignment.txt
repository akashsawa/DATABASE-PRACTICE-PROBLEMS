select ENAME, sal,empno , rank() over ( order by empno) as "roe number" from emp ) as d_table where row_number = 1;

1. *Create Collection
> db.createCollection("empl")

*Insert Records Into EMPL Collection
> db.empl.insert([
 {no:1,name:"ST",salary:2000,role:"OB"},
 {no:2,name:"MSD",salary:1500,role:"WK"},
 {no:3,name:"YS",salary:1000,role:"ALR"},
 {no:4,name:"RD",salary:1000,role:"MOB"},
 {no:5,name:"RS",salary:500,role:"OB"},
 {no:6,name:"BK",salary:500,role:"MOB"},
 {no:7,name:"VK",salary:300,role:"BW"},
 {no:8,name:"JB",salary:400,role:"BW"},
 {no:9,name:"HP",salary:400,role:"ALR"},
 

> show dbs;
admin          0.000GB
akashdatabase  0.000GB
config         0.000GB
employees      0.000GB
local          0.000GB
student        0.000GB
> db.EMP;
test.EMP
> use EMP;
switched to db EMP
> db.createCollection("EMPL");
{ "ok" : 1 }
> db.createCollection("empl");
{ "ok" : 1 }
> db.empl.insert([
...  {no:1,name:"ST",salary:2000,role:"OB"},
...  {no:2,name:"MSD",salary:1500,role:"WK"},
...  {no:3,name:"YS",salary:1000,role:"ALR"},
...  {no:4,name:"RD",salary:1000,role:"MOB"},
...  {no:5,name:"RS",salary:500,role:"OB"},
...  {no:6,name:"BK",salary:500,role:"MOB"},
...  {no:7,name:"VK",salary:300,role:"BW"},
...  {no:8,name:"JB",salary:400,role:"BW"},
...  {no:9,name:"HP",salary:400,role:"ALR"},
...  {no:10,name:"VS",salary:300,role:"OB"}])
BulkWriteResult({
        "writeErrors" : [ ],
        "writeConcernErrors" : [ ],
        "nInserted" : 10,
        "nUpserted" : 0,
        "nMatched" : 0,
        "nModified" : 0,
        "nRemoved" : 0,
        "upserted" : [ ]
})

2. *Update Salary Of Employee where Name is "ST" by +8000

> db.empl.update( { name:"ST" },{ $set : { "salary" : 2000 } });
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.empl.update( { name:"ST" },{ $inc : { "salary" : 8000 } });
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.empl.find();
{ "_id" : ObjectId("6104efa62c1966f19c95f086"), "no" : 2, "name" : "MSD", "salary" : 1500, "role" : "WK" }
{ "_id" : ObjectId("6104efa62c1966f19c95f087"), "no" : 3, "name" : "YS", "salary" : 1000, "role" : "ALR" }
{ "_id" : ObjectId("6104efa62c1966f19c95f088"), "no" : 4, "name" : "RD", "salary" : 1000, "role" : "MOB" }
{ "_id" : ObjectId("6104efa62c1966f19c95f089"), "no" : 5, "name" : "RS", "salary" : 500, "role" : "OB" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08a"), "no" : 6, "name" : "BK", "salary" : 500, "role" : "MOB" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08b"), "no" : 7, "name" : "VK", "salary" : 300, "role" : "BW" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08c"), "no" : 8, "name" : "JB", "salary" : 400, "role" : "BW" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08d"), "no" : 9, "name" : "HP", "salary" : 400, "role" : "ALR" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08e"), "no" : 10, "name" : "VS", "salary" : 300, "role" : "OB" }
{ "_id" : ObjectId("6104f2cc2c1966f19c95f08f"), "no" : 1, "name" : "ST", "salary" : 10000, "role" : "OB" }
>



*Update Salary Of All Employee by giving an increment of +4000 each

db.empl.update( { },{ $inc : { "salary" : 4000 } } , { multi : true });

> db.empl.update( { },{ $inc : { "salary" : 4000 } } , { multi : true });
WriteResult({ "nMatched" : 10, "nUpserted" : 0, "nModified" : 10 })
> db.empl.find();
{ "_id" : ObjectId("6104efa62c1966f19c95f086"), "no" : 2, "name" : "MSD", "salary" : 5500, "role" : "WK" }
{ "_id" : ObjectId("6104efa62c1966f19c95f087"), "no" : 3, "name" : "YS", "salary" : 5000, "role" : "ALR" }
{ "_id" : ObjectId("6104efa62c1966f19c95f088"), "no" : 4, "name" : "RD", "salary" : 5000, "role" : "MOB" }
{ "_id" : ObjectId("6104efa62c1966f19c95f089"), "no" : 5, "name" : "RS", "salary" : 4500, "role" : "OB" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08a"), "no" : 6, "name" : "BK", "salary" : 4500, "role" : "MOB" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08b"), "no" : 7, "name" : "VK", "salary" : 4300, "role" : "BW" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08c"), "no" : 8, "name" : "JB", "salary" : 4400, "role" : "BW" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08d"), "no" : 9, "name" : "HP", "salary" : 4400, "role" : "ALR" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08e"), "no" : 10, "name" : "VS", "salary" : 4300, "role" : "OB" }
{ "_id" : ObjectId("6104f2cc2c1966f19c95f08f"), "no" : 1, "name" : "ST", "salary" : 14000, "role" : "OB" }

*update role of "MSD" as "C and WK"

db.empl.update( { name:"MSD" },{ $set : { "role" : "C","WK" } }  );

> db.empl.update( { name:"MSD" },{ $set : { "role" : "C & WK" } } , );
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.empl.find();
{ "_id" : ObjectId("6104efa62c1966f19c95f086"), "no" : 2, "name" : "MSD", "salary" : 5500, "role" : "C & WK" }
{ "_id" : ObjectId("6104efa62c1966f19c95f087"), "no" : 3, "name" : "YS", "salary" : 5000, "role" : "ALR" }
{ "_id" : ObjectId("6104efa62c1966f19c95f088"), "no" : 4, "name" : "RD", "salary" : 5000, "role" : "MOB" }
{ "_id" : ObjectId("6104efa62c1966f19c95f089"), "no" : 5, "name" : "RS", "salary" : 4500, "role" : "OB" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08a"), "no" : 6, "name" : "BK", "salary" : 4500, "role" : "MOB" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08b"), "no" : 7, "name" : "VK", "salary" : 4300, "role" : "BW" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08c"), "no" : 8, "name" : "JB", "salary" : 4400, "role" : "BW" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08d"), "no" : 9, "name" : "HP", "salary" : 4400, "role" : "ALR" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08e"), "no" : 10, "name" : "VS", "salary" : 4300, "role" : "OB" }
{ "_id" : ObjectId("6104f2cc2c1966f19c95f08f"), "no" : 1, "name" : "ST", "salary" : 14000, "role" : "OB" }
>



*Add a New Field remark to document with name "RS" set Remark as WC

db.emp.update({name:"RS"},{$set:{remark:"WC"}}, {upsert : true} );



*Add a New Field As Number 11,name AK,Salary 10000,role coch without using insert statement. But for Doing So You should have a Record Added woth number 11.

db.empl.update({no:11},{$set:{no:11,name:"AK",salary:10000,role:"coch"}},{upsert:true})

> db.emp.update({name:"RS"},{$set:{remark:"WC"}}, {upsert : "true"} );
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 0 })
> db.empl.find();
{ "_id" : ObjectId("6104efa62c1966f19c95f086"), "no" : 2, "name" : "MSD", "salary" : 5500, "role" : "C & WK" }
{ "_id" : ObjectId("6104efa62c1966f19c95f087"), "no" : 3, "name" : "YS", "salary" : 5000, "role" : "ALR" }
{ "_id" : ObjectId("6104efa62c1966f19c95f088"), "no" : 4, "name" : "RD", "salary" : 5000, "role" : "MOB" }
{ "_id" : ObjectId("6104efa62c1966f19c95f089"), "no" : 5, "name" : "RS", "salary" : 4500, "role" : "OB" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08a"), "no" : 6, "name" : "BK", "salary" : 4500, "role" : "MOB" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08b"), "no" : 7, "name" : "VK", "salary" : 4300, "role" : "BW" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08c"), "no" : 8, "name" : "JB", "salary" : 4400, "role" : "BW" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08d"), "no" : 9, "name" : "HP", "salary" : 4400, "role" : "ALR" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08e"), "no" : 10, "name" : "VS", "salary" : 4300, "role" : "OB" }
{ "_id" : ObjectId("6104f2cc2c1966f19c95f08f"), "no" : 1, "name" : "ST", "salary" : 14000, "role" : "OB" }
{ "_id" : ObjectId("61050b30575c66ed7be14e81"), "no" : 11, "name" : "AK", "role" : "coch", "salary" : 10000 }

*remove added New Field

> db.empl.update({name:"RD"},{$unset:{remark:"WC"}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 0 })
> db.empl.find();
{ "_id" : ObjectId("6104efa62c1966f19c95f086"), "no" : 2, "name" : "MSD", "salary" : 5500, "role" : "C & WK" }
{ "_id" : ObjectId("6104efa62c1966f19c95f087"), "no" : 3, "name" : "YS", "salary" : 5000, "role" : "ALR" }
{ "_id" : ObjectId("6104efa62c1966f19c95f088"), "no" : 4, "name" : "RD", "salary" : 5000, "role" : "MOB" }
{ "_id" : ObjectId("6104efa62c1966f19c95f089"), "no" : 5, "name" : "RS", "salary" : 4500, "role" : "OB" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08a"), "no" : 6, "name" : "BK", "salary" : 4500, "role" : "MOB" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08b"), "no" : 7, "name" : "VK", "salary" : 4300, "role" : "BW" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08c"), "no" : 8, "name" : "JB", "salary" : 4400, "role" : "BW" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08d"), "no" : 9, "name" : "HP", "salary" : 4400, "role" : "ALR" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08e"), "no" : 10, "name" : "VS", "salary" : 4300, "role" : "OB" }
{ "_id" : ObjectId("6104f2cc2c1966f19c95f08f"), "no" : 1, "name" : "ST", "salary" : 14000, "role" : "OB" }
{ "_id" : ObjectId("61050b30575c66ed7be14e81"), "no" : 11, "name" : "AK", "role" : "coch", "salary" : 10000 }

*Update the Field "RD" by multiplying with salary by 2

> db.empl.update({name:"RD"},{$mul:{salary:2}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.empl.find();
{ "_id" : ObjectId("6104efa62c1966f19c95f086"), "no" : 2, "name" : "MSD", "salary" : 5500, "role" : "C & WK" }
{ "_id" : ObjectId("6104efa62c1966f19c95f087"), "no" : 3, "name" : "YS", "salary" : 5000, "role" : "ALR" }
{ "_id" : ObjectId("6104efa62c1966f19c95f088"), "no" : 4, "name" : "RD", "salary" : 10000, "role" : "MOB" }
{ "_id" : ObjectId("6104efa62c1966f19c95f089"), "no" : 5, "name" : "RS", "salary" : 4500, "role" : "OB" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08a"), "no" : 6, "name" : "BK", "salary" : 4500, "role" : "MOB" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08b"), "no" : 7, "name" : "VK", "salary" : 4300, "role" : "BW" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08c"), "no" : 8, "name" : "JB", "salary" : 4400, "role" : "BW" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08d"), "no" : 9, "name" : "HP", "salary" : 4400, "role" : "ALR" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08e"), "no" : 10, "name" : "VS", "salary" : 4300, "role" : "OB" }
{ "_id" : ObjectId("6104f2cc2c1966f19c95f08f"), "no" : 1, "name" : "ST", "salary" : 14000, "role" : "OB" }
{ "_id" : ObjectId("61050b30575c66ed7be14e81"), "no" : 11, "name" : "AK", "role" : "coch", "salary" : 10000 }
>

*To Find Document From the empl collection where name begins with S

> db.empl.find({name:/^S/})
{ "_id" : ObjectId("6104f2cc2c1966f19c95f08f"), "no" : 1, "name" : "ST", "salary" : 14000, "role" : "OB" }

*To Find Document From the empl collection where name begins with R

db.empl.find({name:/^R/})

> db.empl.find({name:/^R/})
{ "_id" : ObjectId("6104efa62c1966f19c95f088"), "no" : 4, "name" : "RD", "salary" : 10000, "role" : "MOB" }
{ "_id" : ObjectId("6104efa62c1966f19c95f089"), "no" : 5, "name" : "RS", "salary" : 4500, "role" : "OB" }


*To Find Document From the empl collection where name ends with K

db.empl.find({name:/K$/})

> db.empl.find({name:/K$/})
{ "_id" : ObjectId("6104efa62c1966f19c95f08a"), "no" : 6, "name" : "BK", "salary" : 4500, "role" : "MOB" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08b"), "no" : 7, "name" : "VK", "salary" : 4300, "role" : "BW" }
{ "_id" : ObjectId("61050b30575c66ed7be14e81"), "no" : 11, "name" : "AK", "role" : "coch", "salary" : 10000 }

*To Find Document From the empl collection where name ends with D

> db.empl.find({name:/D$/})
{ "_id" : ObjectId("6104efa62c1966f19c95f086"), "no" : 2, "name" : "MSD", "salary" : 5500, "role" : "C & WK" }
{ "_id" : ObjectId("6104efa62c1966f19c95f088"), "no" : 4, "name" : "RD", "salary" : 10000, "role" : "MOB" }


*To Find Document From the empl collection where name has S in any position

> db.empl.find({name:/S/})
{ "_id" : ObjectId("6104efa62c1966f19c95f086"), "no" : 2, "name" : "MSD", "salary" : 5500, "role" : "C & WK" }
{ "_id" : ObjectId("6104efa62c1966f19c95f087"), "no" : 3, "name" : "YS", "salary" : 5000, "role" : "ALR" }
{ "_id" : ObjectId("6104efa62c1966f19c95f089"), "no" : 5, "name" : "RS", "salary" : 4500, "role" : "OB" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08e"), "no" : 10, "name" : "VS", "salary" : 4300, "role" : "OB" }
{ "_id" : ObjectId("6104f2cc2c1966f19c95f08f"), "no" : 1, "name" : "ST", "salary" : 14000, "role" : "OB" }

* To Find Document From the empl collection where name begins with S

> db.empl.find({name:{$regex:"^S"}})
{ "_id" : ObjectId("6104f2cc2c1966f19c95f08f"), "no" : 1, "name" : "ST", "salary" : 14000, "role" : "OB" }

* To Find Document From the empl collection where name begins with S

> db.empl.find({role:{$nin:["OB","MOB"]}})
{ "_id" : ObjectId("6104efa62c1966f19c95f086"), "no" : 2, "name" : "MSD", "salary" : 5500, "role" : "C & WK" }
{ "_id" : ObjectId("6104efa62c1966f19c95f087"), "no" : 3, "name" : "YS", "salary" : 5000, "role" : "ALR" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08b"), "no" : 7, "name" : "VK", "salary" : 4300, "role" : "BW" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08c"), "no" : 8, "name" : "JB", "salary" : 4400, "role" : "BW" }
{ "_id" : ObjectId("6104efa62c1966f19c95f08d"), "no" : 9, "name" : "HP", "salary" : 4400, "role" : "ALR" }
{ "_id" : ObjectId("61050b30575c66ed7be14e81"), "no" : 11, "name" : "AK", "role" : "coch", "salary" : 10000 }



