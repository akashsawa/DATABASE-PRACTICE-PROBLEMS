1.Connect to MongoDB using the console ( by executing the mongo command )
2.Create a student database
3.Connect to student database
4.Insert following records into the "users" collection:

> db.createCollection("users");
> db.users.insert({user_id:“abc1”, firstName:"Steve", lastName:"Haines", age:39, gender :“M”});
2021-07-29T21:13:31.772+0530 E  QUERY    [js] uncaught exception: SyntaxError: illegal character :
@(shell):1:25
> show collections;
new
users
> db.users.insert( { user_id: “abc11”, firstName: "Ranjan", lastName: "Patil", age: 60, gender : “M” "address":} );
2021-07-29T22:02:59.304+0530 E  QUERY    [js] uncaught exception: SyntaxError: illegal character :
@(shell):1:28
> { "street": "Phase1", "zipcode": "400049", "state": "Maharashtra"
... }
2021-07-29T22:03:02.607+0530 E  QUERY    [js] uncaught exception: SyntaxError: unexpected token: ':' :
@(shell):1:10
> db.users.insert( { user_id: "abc11", firstName: "Ranjan", lastName: "Patil", age: 60, gender : "M" "address":{ "street": "Phase1", "zipcode": "400049", "state": "Maharashtra"}  } );
2021-07-29T22:04:23.119+0530 E  QUERY    [js] uncaught exception: SyntaxError: missing } after property list :
@(shell):1:99
> db.users.insert( { user_id: "abc11", firstName: "Ranjan", lastName: "Patil", age: 60, gender : "M" ,"address":{ "street": "Phase1", "zipcode": "400049", "state": "Maharashtra"}  } );
WriteResult({ "nInserted" : 1 })
> db.users.find();
{ "_id" : ObjectId("6102cd8a7390661492fd938c"), "user_id" : "abc1", "firstName" : "steve", "lastName" : "haines", "age" : 39, "gender" : "M" }
{ "_id" : ObjectId("6102d7347390661492fd938d"), "user_id" : "abc2", "firstName" : "Michael", "lastName" : "Obama", "age" : 25, "gender" : "M" }
{ "_id" : ObjectId("6102d77e7390661492fd938e"), "user_id" : "abc3", "firstName" : "Ram", "lastName" : "Das", "age" : 45, "gener" : "M" }
{ "_id" : ObjectId("6102d7b07390661492fd938f"), "user_id" : "abc4", "firstName" : "Chetan", "lastName" : "Barot", "age" : 30, "gender" : "M" }
{ "_id" : ObjectId("6102d7f47390661492fd9390"), "user_id" : "abc5", "firstName" : "Jaya", "lastName" : "Kumari", "age" : 35, "gender" : "F" }
{ "_id" : ObjectId("6102d8127390661492fd9391"), "user_id" : "abc6", "firstName" : "Seeta", "lastName" : "Kumari", "age" : 22, "gender" : "F" }
{ "_id" : ObjectId("6102d89d7390661492fd9392"), "user_id" : "abc11", "firstName" : "Ranjan", "lastName" : "Patil", "age" : 60, "gender" : "M", "address" : { "street" : "Phase1", "zipcode" : "400049", "state" : "Maharashtra" } }

5. Display the data from the users collection

> db.users.find();
{ "_id" : ObjectId("6102cd8a7390661492fd938c"), "user_id" : "abc1", "firstName" : "steve", "lastName" : "haines", "age" : 39, "gender" : "M" }
{ "_id" : ObjectId("6102d7347390661492fd938d"), "user_id" : "abc2", "firstName" : "Michael", "lastName" : "Obama", "age" : 25, "gender" : "M" }
{ "_id" : ObjectId("6102d77e7390661492fd938e"), "user_id" : "abc3", "firstName" : "Ram", "lastName" : "Das", "age" : 45, "gener" : "M" }
{ "_id" : ObjectId("6102d7b07390661492fd938f"), "user_id" : "abc4", "firstName" : "Chetan", "lastName" : "Barot", "age" : 30, "gender" : "M" }
{ "_id" : ObjectId("6102d7f47390661492fd9390"), "user_id" : "abc5", "firstName" : "Jaya", "lastName" : "Kumari", "age" : 35, "gender" : "F" }
{ "_id" : ObjectId("6102d8127390661492fd9391"), "user_id" : "abc6", "firstName" : "Seeta", "lastName" : "Kumari", "age" : 22, "gender" : "F" }
{ "_id" : ObjectId("6102d89d7390661492fd9392"), "user_id" : "abc11", "firstName" : "Ranjan", "lastName" : "Patil", "age" : 60, "gender" : "M", "address" : { "street" : "Phase1", "zipcode" : "400049", "state" : "Maharashtra" } }


6. Sort the records in ascending order of age.

> db.users.aggregate( [ { $sort: {age:1} } ]);
{ "_id" : ObjectId("6102d8127390661492fd9391"), "user_id" : "abc6", "firstName" : "Seeta", "lastName" : "Kumari", "age" : 22, "gender" : "F" }
{ "_id" : ObjectId("6102d7347390661492fd938d"), "user_id" : "abc2", "firstName" : "Michael", "lastName" : "Obama", "age" : 25, "gender" : "M" }
{ "_id" : ObjectId("6102d7b07390661492fd938f"), "user_id" : "abc4", "firstName" : "Chetan", "lastName" : "Barot", "age" : 30, "gender" : "M" }
{ "_id" : ObjectId("6102d7f47390661492fd9390"), "user_id" : "abc5", "firstName" : "Jaya", "lastName" : "Kumari", "age" : 35, "gender" : "F" }
{ "_id" : ObjectId("6102cd8a7390661492fd938c"), "user_id" : "abc1", "firstName" : "steve", "lastName" : "haines", "age" : 39, "gender" : "M" }
{ "_id" : ObjectId("6102d77e7390661492fd938e"), "user_id" : "abc3", "firstName" : "Ram", "lastName" : "Das", "age" : 45, "gener" : "M" }
{ "_id" : ObjectId("6102d89d7390661492fd9392"), "user_id" : "abc11", "firstName" : "Ranjan", "lastName" : "Patil", "age" : 60, "gender" : "M", "address" : { "street" : "Phase1", "zipcode" : "400049", "state" : "Maharashtra" } }


7. Display the records with last name Kumari

> db.users.find( { lastName : "Kumari" } );
{ "_id" : ObjectId("6102d7f47390661492fd9390"), "user_id" : "abc5", "firstName" : "Jaya", "lastName" : "Kumari", "age" : 35, "gender" : "F" }
{ "_id" : ObjectId("6102d8127390661492fd9391"), "user_id" : "abc6", "firstName" : "Seeta", "lastName" : "Kumari", "age" : 22, "gender" : "F" }


8. Display the records of gender Male.

> db.users.find( { gender : "M" } );
{ "_id" : ObjectId("6102cd8a7390661492fd938c"), "user_id" : "abc1", "firstName" : "steve", "lastName" : "haines", "age" : 39, "gender" : "M" }
{ "_id" : ObjectId("6102d7347390661492fd938d"), "user_id" : "abc2", "firstName" : "Michael", "lastName" : "Obama", "age" : 25, "gender" : "M" }
{ "_id" : ObjectId("6102d7b07390661492fd938f"), "user_id" : "abc4", "firstName" : "Chetan", "lastName" : "Barot", "age" : 30, "gender" : "M" }
{ "_id" : ObjectId("6102d89d7390661492fd9392"), "user_id" : "abc11", "firstName" : "Ranjan", "lastName" : "Patil", "age" : 60, "gender" : "M", "address" : { "street" : "Phase1", "zipcode" : "400049", "state" : "Maharashtra" } }

9. Display the only first name, last name and age of users whose age is less than 30 years (Display
all fields except id and gender)

> db.users.find({age:{$lt:30}},{_id:0,firstName:1,lastName:1,age:1});
{ "firstName" : "Michael", "lastName" : "Obama", "age" : 25 }
{ "firstName" : "Seeta", "lastName" : "Kumari", "age" : 22 }


10. Display the records of age greater than 30 years

> db.users.find( { age : { $gt : 30 } } );
{ "_id" : ObjectId("6102cd8a7390661492fd938c"), "user_id" : "abc1", "firstName" : "steve", "lastName" : "haines", "age" : 39, "gender" : "M" }
{ "_id" : ObjectId("6102d77e7390661492fd938e"), "user_id" : "abc3", "firstName" : "Ram", "lastName" : "Das", "age" : 45, "gener" : "M" }
{ "_id" : ObjectId("6102d7f47390661492fd9390"), "user_id" : "abc5", "firstName" : "Jaya", "lastName" : "Kumari", "age" : 35, "gender" : "F" }
{ "_id" : ObjectId("6102d89d7390661492fd9392"), "user_id" : "abc11", "firstName" : "Ranjan", "lastName" : "Patil", "age" : 60, "gender" : "M", "address" : { "street" : "Phase1", "zipcode" : "400049", "state" : "Maharashtra" } }

11. Display the records whose age is 57 years.

> db.users.find( { age : 57} );
{ "_id" : ObjectId("6102ddf07390661492fd9395"), "user_id" : "abc16", "firstName" : "param", "lastName" : "shinde", "age" : 57, "gender" : "M", "address" : { "street" : "Phase1", "zipcode" : "400049", "state" : "Maharashtra" } }


12. Update the record of user mentioned in (j), set it’s age to 73

> db.users.updateOne( { user_id: "abc3" },{ $set : { "age" : 73 }} );
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }

13. Update the record of user mentioned in (d), increment it’s age by 3.

> db.users.updateOne( { user_id: "abc5" },{ $inc : { "age" : 3 }} );
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }
> db.users.find( {user_id : "abc5" });
{ "_id" : ObjectId("6102d7f47390661492fd9390"), "user_id" : "abc5", "firstName" : "Jaya", "lastName" : "Kumari", "age" : 38, "gender" : "F" }
>

14. Remove age from the record (i)

> db.users.update( { user_id: "abc2" },{ $unset :  { age:1 } } );
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.users.find( {user_id : "abc2" });
{ "_id" : ObjectId("6102d7347390661492fd938d"), "user_id" : "abc2", "firstName" : "Michael", "lastName" : "Obama", "gender" : "M" }

15. Remove all the parameters for user with first name “Steve” from the record.


 db.users.remove( { firstName : "steve" });
WriteResult({ "nRemoved" : 0 })
> db.users.find();
{ "_id" : ObjectId("6102cd8a7390661492fd938c"), "user_id" : "abc1", "lastName" : "haines", "age" : 39, "gender" : "M" }
{ "_id" : ObjectId("6102d7347390661492fd938d"), "user_id" : "abc2", "lastName" : "Obama", "gender" : "M" }
{ "_id" : ObjectId("6102d77e7390661492fd938e"), "user_id" : "abc3", "lastName" : "Das", "age" : 73, "gener" : "M" }
{ "_id" : ObjectId("6102d7b07390661492fd938f"), "user_id" : "abc4", "lastName" : "Barot", "age" : 30, "gender" : "M" }
{ "_id" : ObjectId("6102d7f47390661492fd9390"), "user_id" : "abc5", "lastName" : "Kumari", "age" : 38, "gender" : "F" }
{ "_id" : ObjectId("6102d8127390661492fd9391"), "user_id" : "abc6", "lastName" : "Kumari", "age" : 22, "gender" : "F" }
{ "_id" : ObjectId("6102d89d7390661492fd9392"), "user_id" : "abc11", "lastName" : "Patil", "age" : 60, "gender" : "M", "address" : { "street" : "Phase1", "zipcode" : "400049", "state" : "Maharashtra" } }
{ "_id" : ObjectId("6102ddb37390661492fd9393"), "user_id" : "abc11", "lastName" : "Patil", "age" : 60, "gender" : "M", "address" : { "street" : "Phase1", "zipcode" : "400049", "state" : "Maharashtra" } }
{ "_id" : ObjectId("6102ddc37390661492fd9394"), "user_id" : "abc11", "lastName" : "Patil", "age" : 60, "gender" : "M", "address" : { "street" : "Phase1", "zipcode" : "400049", "state" : "Maharashtra" } }
{ "_id" : ObjectId("6102ddf07390661492fd9395"), "user_id" : "abc16", "lastName" : "shinde", "age" : 57, "gender" : "M", "address" : { "street" : "Phase1", "zipcode" : "400049", "state" : "Maharashtra" } }
> db.users.remove( { firstName : "steve" });




